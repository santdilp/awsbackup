AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Backup Demo - Main Template'

Parameters:
  EnvironmentName:
    Description: Environment name prefix for resources
    Type: String
    Default: BackupDemo
  
  EnableSSMAccess:
    Description: Enable SSM Session Manager access to EC2 instances (recommended)
    Type: String
    Default: true
    AllowedValues: [true, false]
    
  DelegatedAdminAccountId:
    Description: AWS Account ID for Backup delegated administrator (leave blank if same account)
    Type: String
    Default: ""
    
  TemplateBucketName:
    Description: S3 bucket name containing nested CloudFormation templates
    Type: String

Resources:
  GeneratedDBPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub "Auto-generated password for ${EnvironmentName} RDS database"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'

  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/vpc.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName

  StorageStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/storage.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/database.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        DBPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref GeneratedDBPassword, ':SecretString:password}}' ]]
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        PrivateSubnet1Id: !GetAtt VPCStack.Outputs.PrivateSubnet1Id
        PrivateSubnet2Id: !GetAtt VPCStack.Outputs.PrivateSubnet2Id

  BackupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/backup.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        DelegatedAdminAccountId: !Ref DelegatedAdminAccountId

  ComputeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [VPCStack, StorageStack, DatabaseStack]
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/compute.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        EnableSSMAccess: !Ref EnableSSMAccess
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        PublicSubnetId: !GetAtt VPCStack.Outputs.PublicSubnet1Id
        S3BucketName: !GetAtt StorageStack.Outputs.S3BucketName
        DynamoDBTableName: !GetAtt StorageStack.Outputs.DynamoDBTableName
        RDSEndpoint: !GetAtt DatabaseStack.Outputs.RDSEndpoint
        DBPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref GeneratedDBPassword, ':SecretString:password}}' ]]

Outputs:
  VpcId:
    Description: VPC ID
    Value: !GetAtt VPCStack.Outputs.VpcId

  EC2PublicIP:
    Description: EC2 Public IP
    Value: !GetAtt ComputeStack.Outputs.EC2PublicIP

  RDSEndpoint:
    Description: RDS Endpoint
    Value: !GetAtt DatabaseStack.Outputs.RDSEndpoint

  S3BucketName:
    Description: S3 Bucket Name
    Value: !GetAtt StorageStack.Outputs.S3BucketName

  DynamoDBTableName:
    Description: DynamoDB Table Name
    Value: !GetAtt StorageStack.Outputs.DynamoDBTableName

  BackupVaultName:
    Description: AWS Backup Vault Name
    Value: !GetAtt BackupStack.Outputs.BackupVaultName
    
  DBSecretName:
    Description: Secrets Manager secret containing database credentials
    Value: !Ref GeneratedDBPassword